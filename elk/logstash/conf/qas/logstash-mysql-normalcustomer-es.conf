# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  jdbc{
     type => "normalcustomer_qas"
	 #The path to our download jdbc driver
	 jdbc_connection_string => "jdbc:mysql://192.168.20.20:3307/ydqas?useConfigs=maxPerformance&characterEncoding=utf8"
	 jdbc_driver_library => "/usr/local/logstash/driver/mysql-connector-java-5.1.46.jar"
	 jdbc_driver_class => "com.mysql.jdbc.driver"
	 
	 #The user we wish to execute our statement as
	 jdbc_user => "ydqas"
	 jdbc_password => "ydqas"
	 
	 #last_run_metadata_path => "./logstash_last_run_display"
	 
	 #every 5 minutes execute
	 #schedule => "*/5 * * * *"
	 schedule => "*/5 * * * *"
	 #if clean_run set to true, sql_last_value is set to 19700101
	 #clean_run => true 
	 last_run_metadata_path => "./logstash_jdbc_last_run"
	 #out query
	 #parameters => {"name" => "长沙大东家"}
	 #statement => "select * from sys_user where name = :name"
	 #statement => "select * from ydstore where createdTs > :sql_last_value"
     #statement => "select * from formalorder where createdTs > :sql_last_value"
	 statement => "SELECT pk, unix_timestamp(modifiedTS) as modifiedstamp,  DATE_FORMAT(modifiedts, '%Y-%m-%d %T.%f') as modifiedts, p_name as name,  DATE_FORMAT(createdTs, '%Y-%m-%d %T.%f') as createdts, p_code as code, p_mobilenumber as mobilenumber, p_storelist as storelist, p_paperid as paperid, CASE p_gender WHEN 8796112650331 THEN 'MAN' WHEN 8796112683099 THEN 'WOMAN' ELSE NULL END AS gender FROM normalcustomer where 1=1"
	 use_column_value => true
	 tracking_column => "modifiedstamp"
	 
	 jdbc_paging_enabled => "true"
	 jdbc_page_size => "1000"
	 
	 jdbc_default_timezone =>"Asia/Shanghai"
  }
}

filter {
  ruby {
    code => "event.set('id',event.get('pk'))"
	#path => "/usr/local/logstash/template/template-ydstore.rb"
  }
}

output {
  if[type]=="normalcustomer_qas" {
      stdout { codec => rubydebug }
	  elasticsearch {
		hosts => ["http://192.168.0.178:9200"]
		index => "normalcustomer_qas"
		document_id => "%{id}"
		#user => "elastic"
		#password => "changeme"
		action => "index"
		manage_template=> true
		template_name=>"normalcustomer_qas"
		template_overwrite => true
        template => "/usr/local/logstash/template/template-normalcustomer.json"
	  }
  }
}
