# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  jdbc{
     type => "sys_formalorder"
	 #The path to our download jdbc driver
	 jdbc_connection_string => "jdbc:mysql://192.168.20.20:3307/ydqas?useConfigs=maxPerformance&characterEncoding=utf8"
	 jdbc_driver_library => "/usr/local/logstash/driver/mysql-connector-java-5.1.46.jar"
	 jdbc_driver_class => "com.mysql.jdbc.driver"
	 
	 #The user we wish to execute our statement as
	 jdbc_user => "ydqas"
	 jdbc_password => "ydqas"
	 
	 #last_run_metadata_path => "./logstash_last_run_display"
	 
	 #every 5 minutes execute
	 #schedule => "*/5 * * * *"
	 schedule => "* * * * *"
	 #if clean_run set to true, sql_last_value is set to 19700101
	 clean_run => true 
	 last_run_metadata_path => "./logstash_jdbc_last_run"
	 #out query
	 #parameters => {"name" => "长沙大东家"}
	 #statement => "select * from sys_user where name = :name"
	 #statement => "select * from ydstore where createdTs > :sql_last_value"
     statement => "select * from formalorder where createdTs > :sql_last_value"
	 use_column_value => true
	 tracking_column => "update_date"
	 
	 jdbc_paging_enabled => "true"
	 jdbc_page_size => "1000"
	 
	 jdbc_default_timezone =>"Asia/Shanghai"
  }
}

filter {
  ruby {
    code => "event.set('id',event.get('pk'))"
  }
}

output {
  if[type]=="sys_formalorder" {
      stdout { codec => rubydebug }
	  elasticsearch {
		hosts => ["http://localhost:9200"]
		index => "hybris_qas"
		document_type => "%{type}"
		document_id => "%{id}"
		doc_as_upsert => true
		#user => "elastic"
		#password => "changeme"
		action => "update"
		manage_template=>true
		template_name=>""
		template_overwrite => true
        template => "/usr/local/logstash/template/mysql_qas_formalorder_wireless.json"
	  }
  }
}
